# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/embedding/base.ipynb.

# %% auto 0
__all__ = ['RagasEmbedding']

# %% ../../nbs/embedding/base.ipynb 2
import typing as t
from dataclasses import dataclass


@dataclass
class RagasEmbedding:
    client: t.Any
    model: str
    
    def embed_text(self,text:str,**kwargs: t.Any) -> t.List[float]:
        
        return self.client.embeddings.create(input=text, model=self.model, **kwargs).data[0].embedding
        
    async def aembed_text(self,text:str,**kwargs: t.Any):
        
        await self.client.embeddings.create(input=text, model=self.model, **kwargs).data[0].embedding
    
    
    def embed_document(self,documents:t.List[str],**kwargs: t.Any) -> t.List[t.List[float]]:
        embeddings = self.client.embeddings.create(input=documents, model=self.model, **kwargs)
        return [embedding.embedding for embedding in embeddings.data]
    
    async def aembed_document(self,documents:t.List[str],**kwargs: t.Any)  -> t.List[t.List[float]]:
        embeddings = await self.client.embeddings.create(input=documents, model=self.model, **kwargs)
        return [embedding.embedding for embedding in embeddings.data]

